@{
    ViewData["Title"] = "Students";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Your App Name</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-9ndCyUaIbzAi2FUVXJi0CjmCapSmO7SnpJef0486qhLnuZ2cdeRhO02iuK6FUUVM" crossorigin="anonymous">
    <!-- Bootstrap Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css">
</head>
<body>
    <div class="container mt-5">
        <div class="row">
            <div class="col-12">
                <div class="d-flex justify-content-between align-items-center mb-4">
                    <h2>Student Details</h2>
                    <a href="/Student/Add" class="btn btn-success">
                        <i class="bi bi-plus-circle me-1"></i>Add Student
                    </a>
                </div>
                <div class="card shadow-lg p-4">
                    <div class="d-flex justify-content-between mb-3">
                        <button id="loadBtn" class="btn btn-primary">
                            <i class="bi bi-arrow-clockwise"></i> Load Students
                        </button>
                        <!-- Dropdown for filtering by Gender -->
                        <div class="d-flex align-items-center">
                            <label class="me-2 fw-semibold text-secondary">Filter by Gender:</label>
                            <select id="genderDropdown" class="form-select" style="width: 200px;">
                                <option value="">-- Select Gender --</option>
                            </select>
                        </div>
                    </div>
                    <div class="table-responsive">
                        <table class="table table-bordered table-striped table-hover">
                            <thead class="table-dark">
                                <tr>
                                    <th>Student ID</th>
                                    <th>Roll Number</th>
                                    <th>Name</th>
                                    <th>Email</th>
                                    <th>Phone</th>
                                    <th>Address</th>
                                    <th>Date of Birth</th>
                                    <th>Gender</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody id="studentTableBody"><!-- Data will be appended here --></tbody>
                        </table>
                    </div>
                    <div id="pagination" class="mt-3"></div>
                </div>
                <p id="msg" class="text-danger mt-3 text-center"></p>
            </div>
        </div>
    </div>

    <!-- jQuery -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js" integrity="sha384-geWF76RCwLtnZ8qwWowPQNguL3RmwHVBC9FhGdlKrxdiJJigb/j/68SIy3Te4Bkz" crossorigin="anonymous"></script>
    <script>
        let studentsData = [];
        let currentPage = 1;
        const pageSize = 5; // Number of students per page

        $(document).ready(function () {
            loadStudents();
        });

        $("#loadBtn").click(loadStudents);

        function loadStudents() {
            var token = localStorage.getItem("jwtToken");
            if (!token) {
                $("#msg").text("Please log in first!");
                return;
            }
            $.ajax({
                url: "https://localhost:7097/api/Student/AllStudents", // https://localhost:7097/api/Student/AllStudents
                type: "GET",
                headers: { "Authorization": "Bearer " + token },
                success: function (data) {
                    studentsData = data;
                    populateDropdown(data);
                    currentPage = 1;
                    renderTable();
                },
                error: function (xhr) {
                    if (xhr.status === 401) {
                        $("#msg").text("Unauthorized: Please login again.");
                    } else {
                        $("#msg").text("Error fetching data from server.");
                    }
                }
            });
        }

        // Populate dropdown with unique genders
        function populateDropdown(data) {
            let genders = [...new Set(data.map(s => s.gender).filter(g => g))];
            let options = "<option value=''>-- Select Gender --</option>";
            genders.forEach(g => {
                options += `<option value='${g}'>${g}</option>`;
            });
            $("#genderDropdown").html(options);
        }

        // Filter by gender
        $("#genderDropdown").change(function () {
            const gender = $(this).val();
            let filtered = gender ? studentsData.filter(s => s.gender === gender) : studentsData;
            studentsData = filtered; // Update to filtered data for pagination
            currentPage = 1;
            renderTable();
        });

        // Render Table with Pagination
        function renderTable() {
            if (!studentsData || studentsData.length === 0) {
                $("#studentTableBody").html("<tr><td colspan='9' class='text-muted text-center'>No students found.</td></tr>");
                $("#pagination").html("");
                return;
            }

            const totalPages = Math.ceil(studentsData.length / pageSize);
            const start = (currentPage - 1) * pageSize;
            const end = start + pageSize;
            const paginatedData = studentsData.slice(start, end);

            let rows = '';
            paginatedData.forEach(student => {
                rows += `<tr>
                    <td>${student.studentId}</td>
                    <td>${student.rollNumber}</td>
                    <td>${student.name}</td>
                    <td>${student.email || 'N/A'}</td>
                    <td>${student.phone || 'N/A'}</td>
                    <td>${student.address || 'N/A'}</td>
                    <td>${student.dateOfBirth ? new Date(student.dateOfBirth).toLocaleDateString() : 'N/A'}</td>
                    <td>${student.gender || 'N/A'}</td>
                    <td>
                        <a href="/Student/Edit/${student.studentId}" class="btn btn-sm btn-primary me-1">
                            <i class="bi bi-pencil"></i> Edit
                        </a>
                        <a href="/Student/Delete/${student.studentId}" class="btn btn-sm btn-danger">
                            <i class="bi bi-trash"></i> Delete
                        </a>
                    </td>
                </tr>`;
            });
            $("#studentTableBody").html(rows);

            // Pagination Controls
            let paginationHtml = `
                <div class='d-flex justify-content-between align-items-center'>
                    <button class='btn btn-outline-primary btn-sm' id='prevPage' ${currentPage === 1 ? "disabled" : ""}>
                        <i class='bi bi-arrow-left'></i> Previous
                    </button>
                    <span class='fw-semibold text-secondary'>
                        Page ${currentPage} of ${totalPages}
                    </span>
                    <button class='btn btn-outline-primary btn-sm' id='nextPage' ${currentPage === totalPages ? "disabled" : ""}>
                        Next <i class='bi bi-arrow-right'></i>
                    </button>
                </div>
            `;
            $("#pagination").html(paginationHtml);

            $("#prevPage").click(() => {
                if (currentPage > 1) {
                    currentPage--;
                    renderTable();
                }
            });

            $("#nextPage").click(() => {
                if (currentPage < totalPages) {
                    currentPage++;
                    renderTable();
                }
            });
        }
    </script>
</body>
</html>